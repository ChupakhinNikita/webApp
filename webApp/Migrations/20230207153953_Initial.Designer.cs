// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webApp.Models;

#nullable disable

namespace webApp.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20230207153953_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("webApp.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("IdStudent"));

                    b.Property<int?>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<string>("DateTime")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("dateTime");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gradebook")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("gradebook");

                    b.Property<string>("Group")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("group");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("lastName");

                    b.Property<string>("Patronomic")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("patronomic");

                    b.Property<string>("Speciality")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("speciality");

                    b.Property<string>("Specialization")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("specialization");

                    b.Property<string>("StudentCondition")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("studentCondition");

                    b.Property<string>("TrainingLevel")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("trainingLevel");

                    b.Property<string>("TuitionForm")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tuitionForm");

                    b.Property<string>("TuitionType")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tuitionType");

                    b.HasKey("IdStudent")
                        .HasName("students_pkey");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("webApp.Models.Teacher", b =>
                {
                    b.Property<string>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying");

                    b.Property<string>("DateTime")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("dateTime");

                    b.Property<string>("Degree")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("degree");

                    b.Property<string>("Department")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("department");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("lastName");

                    b.Property<string>("Patronomic")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("patronomic");

                    b.Property<string>("Post")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("post");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("title");

                    b.HasKey("IdTeacher")
                        .HasName("teachers_pkey");

                    b.ToTable("teachers", (string)null);
                });

            modelBuilder.Entity("webApp.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("IdUser")
                        .HasName("User_pkey");

                    b.HasIndex(new[] { "IdUser" }, "unique_id")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
